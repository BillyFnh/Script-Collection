#!/bin/bash

# Program Overview
# 1. Collect all conf files and concatenate into one conf file (master.conf)
# 2. Get all unique headers from master.conf and create CSV file with appropriate headers (result.csv)
# 3. Create a master-section-collection folder, write all sections to into an independent file
# 4. Loop through all .conf files in master-section-collection folder, and write one row per .conf into result.csv


master="master.conf"
splunkdir="/opt/splunk/etc/apps"
workdir="/root/splunk-apps-savedsearches-conf-extraction"

clean up previous runtime files & prep for current runtime
rm -f $master
rm -f master-raw.conf
rm -f result.csv
rm -rf master-section-collection
rm -rf savedsearches-collection

touch $master
mkdir savedsearches-collection
mkdir master-section-collection


# 1. collect all conf files and concatenate into one conf file ($master)
echo "Begin collecting savedsearches.conf from $splunkdir"

cd $splunkdir

IFS=' ' read -r -a  savedsearches <<< `echo $(find . -name "savedsearches.conf")`
for (( i = 0 ; i < ${#savedsearches[@]} ; i++));do
    filename=`echo ${savedsearches[i]} | grep -P -o '\w.*' | sed 's/\//-/g'`
    cp "${savedsearches[i]}" "/root/splunk-apps-savedsearches-conf-extraction/savedsearches-collection/${filename}"
done

cd $workdir

# this conf file has issue with end of line sequence, needs to set "no end of line" before trailing backslash can be removed
vi ./savedsearches-collection/cisco_cdr-default-savedsearches.conf -c ":set noendofline binary" -c :wq

IFS=' ' read -r -a  targets <<< `echo $(ls ./savedsearches-collection)`
for (( i = 0 ; i < ${#targets[@]} ; i++));do
    # read line by line, add splunk.app.name under each section
    echo "$((i+1))/${#targets[@]}     writing ${targets[i]} to master-raw.conf"
    while IFS= read -r line;do
        if [[ `echo "$line"` =~ ^\[.*\] ]];then
            echo "$line" >> /root/splunk-apps-savedsearches-conf-extraction/master-raw.conf
            echo "splunk.app.name = ${targets[i]:0:-19}" >> /root/splunk-apps-savedsearches-conf-extraction/master-raw.conf
        else
            echo "$line" >> /root/splunk-apps-savedsearches-conf-extraction/master-raw.conf
        fi
    done < ./savedsearches-collection/${targets[i]}
done

# remove trailing backslashes and join lines
sed ':a; N; $!ba; s/\\\n//g; s/\\$//' master-raw.conf > $master


# 2. get all unique headers from $master and create CSV file with appropriate headers (result.csv)

python3.6 ./1-create-csv-with-header.py $master


# 3. create a master-section-collection folder, write all sections to into an independent file

fileID=1

while read line;do
    if [[ $line =~ ^\[.*\] ]];then
        echo "$line" >> ./master-section-collection/section-$fileID.conf
        fileID=$((fileID+1))
    else
        if [[ $fileID != 1 ]];then
            echo "$line" >> ./master-section-collection/section-$((fileID-1)).conf
        else
            echo "$line" >> ./master-section-collection/section-$fileID.conf
        fi
    fi
done < $master


# 4. loop through all .conf files in master-section-collection folder, and write one row per .conf into result.csv

cd master-section-collection

IFS=' ' read -r -a sections <<< `echo $(ls)`
echo "Number of sections extracted: ${#sections[@]}"
for (( i = 0 ; i < ${#sections[@]} ; i++));do
    echo "$((i+1))/${#sections[@]}      processing ${sections[i]}"
    python3.6 ../2-write-section-to-csv.py ${sections[i]}
done

# runtime summary
echo "*************************************************************************"
echo "Number of savedsearches.conf found: ${#savedsearches[@]}"
echo "Number of sections extracted: ${#sections[@]}"
echo "result.csv created: $workdir/result.csv"

# archive result 
cd ..
cp "result.csv" "./result-history/result_`date +%Y%m%d%H%M`.csv"

# clean up runtime files
rm -f $master
rm -f master-raw.conf
rm -rf master-section-collection/
rm -rf savedsearches-collection/

